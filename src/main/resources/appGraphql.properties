#
# Queries Related to Token
#
validateTokenQuery=\{\"query\":\"query { viewer{ login } }\"}

#
# Queries Related to Organization
#
getOrganizationListQuery=\{\"query\":\"query { search(query : \\\"is:public %1$s is:name type:org\\\" type : USER first : 15){ edges{ node{ ... on Organization{ name login } } } } }\"}
getOrganizationProfileQuery=\{\"query\":\" query{organization(login: \\\"%1$s\\\") {name, url, avatarUrl}} \"}

#
# Queries Related to Repositories
#
getRepositoryCountQuery=\{\"query\":\"query { organization(login: \\\"%1$s\\\") { repositories{ totalCount } } }\"}
getRepositoriesQueryUnder100=\{\"query\":\"query { organization(login: \\\"%1$s\\\") { repositories(first: %2$s) { edges { repository:node { name } } } } }\"}
getRepositoriesQueryOver100=\{\"query\":\"query { organization(login: \\\"%1$s\\\") { repositories(first: 100) { edges { repository:node { name } }pageInfo{endCursor, hasNextPage} } } }\"}
getRepositoriesByCursorQuery=\{\"query\":\"query { organization(login: \\\"%1$s\\\") { repositories(first: 100,after:\\\"%2$s\\\") { edges { repository:node { name } }pageInfo{endCursor, hasNextPage} } } }\"}
getRepositoriesByNameQuery=\{\"query\":\"query {search(query: \\\"is:public org:%1$s %2$s in:name\\\", type: REPOSITORY, first: 30) {edges {node {... on Repository {name}}}}}\"}

#
# Queries Related to Issue
#
getPriority1IssuesOpenedBeforeXDaysQuery=\{\"query\":\"query{ search(query:\\\"%1$s type:issue label:p1,priority-1,priority::1,priority/critical is:open created:<%2$s\\\" first:50 type:ISSUE){ edges{ node{ ... on Issue{ title createdAt repository { name } } } } } }\"}
getClosedP1IssuesTimeQuery=\{\"query\":\"query{ search( query: \\\"org:%1$s type:issue label:priority-1,p1,priority::1,priority/critical is:closed\\\" first: 50 type: ISSUE ) { edges { node { ... on Issue { createdAt closedAt } } } } }\"}
getClosedP2IssuesTimeQuery=\{\"query\":\"query{ search( query: \\\"org:%1$s type:issue label:priority-2,p2,priority::2,priority/high is:closed\\\" first: 50 type: ISSUE ) { edges { node { ... on Issue { createdAt closedAt } } } } }\"}

#
# Queries Related to Pull Requests
#
getPullRequestNotUpdatedByDaysQuery=\{\"query\":\" query{search(first: 100, query: \\\"%1$s is:pr is:open updated:>%2$s\\\", type: ISSUE) {totalPullRequest: issueCount, nodes {... on PullRequest {repository {name}, title, updatedAt, merged}}}} \"}
getUnMergedPullRequestByDayQuery=\{\"query\":\"query{search(first: 100, query: \\\"%1$s is:pr is:open is:unmerged created:>%2$s\\\",type: ISSUE) {totalPullRequest: issueCount, nodes {... on PullRequest {repository {name},title,createdAt,merged}}}}\"}


#
# Queries Related to Labels
#
getLabelsQuery=\{\"query\":\"query { search( query: \\\"%1$s\\\" type:REPOSITORY first:100){ nodes{ ... on Repository{ name Repository:labels(first:100 orderBy:{field:NAME direction:ASC}){ labels:nodes{ name } pageInfo{ hasNextPage endCursor } } } } } }\"}
getRemaininglabelsQuery=\{\"query\":\"query { organization(login: \\\"%1$s\\\") { repository(name: \\\"%2$s\\\") { labels( first: 100 after: \\\"%3$s\\\" orderBy: {field: NAME, direction: ASC} ) { nodes { name } } } } }\"}
getOpenIssueCountByLabel=\{\"query\":\"query{ search( query: \\\"%1$s label:%2$s type:issue is:open\\\" type: ISSUE first: 1 ) { issueCount } }\"}
getOpenIssueNamesByLabel=\{\"query\":\"query{ search( query: \\\"%1$s label:%2$s type:issue is:open\\\" type: ISSUE first: 100 ) { nodes{ ... on Issue{ title repository{ name } } }  %3$s  } }\"}
getOpenIssueCountByLabelWithEndCursor=\{\"query\":\"query{ search( query: \\\"%1$s label:%2$s type:issue is:open\\\" type: ISSUE first: 100 after:\\\"%3$s\\\") { nodes{ ... on Issue{ title repository{ name } } }  %4$s  } }\"}